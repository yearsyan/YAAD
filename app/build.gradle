import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    alias(libs.plugins.chaquopy)
    alias(libs.plugins.kotlin.serialization)
    alias(libs.plugins.kotlin.parcelize)
}
apply from: "./buildInfo.gradle"

android {
    namespace 'io.github.yearsyan.yaad'
    compileSdk 36

    defaultConfig {
        applicationId "io.github.yearsyan.yaad"
        minSdk 24
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        python {
            version "3.13"
            pip {}
        }
        ndk {
            abiFilters "arm64-v8a", "x86_64"
        }

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON", "-DANDROID_STL=c++_shared"
            }
        }

    }

    signingConfigs {
        release {
            if (rootProject.file("app/keystore.properties").exists()) {
                def keystorePropertiesFile = rootProject.file("app/keystore.properties")
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            if (rootProject.file("app/keystore.properties").exists()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
        aidl true
        prefab true
        buildConfig true
    }

    externalNativeBuild {
        cmake {
            path file("src/main/cpp/CMakeLists.txt")
        }
    }

    packagingOptions {
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }


    sourceSets {
        main {
            java.srcDirs += layout.buildDirectory.dir("generated/source/buildInfo")
        }
    }
}

clean {
    delete layout.buildDirectory.dir("generated/source/buildInfo")
}


afterEvaluate {
    android.applicationVariants.configureEach { variant ->
        def javaCompileTask = variant.javaCompileProvider.get()
        javaCompileTask.dependsOn(generateBuildInfo)

        try {
            def kotlinCompileTask = project.tasks.findByName("compile${variant.name.capitalize()}Kotlin")
            if (kotlinCompileTask) {
                kotlinCompileTask.dependsOn(generateBuildInfo)
            }
        } catch (Exception ignored) {

        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.dependsOn(generateBuildInfo)
    }

    if (project.plugins.hasPlugin('org.jetbrains.kotlin.android')) {
        tasks.withType(KotlinCompile).configureEach {
            it.dependsOn(generateBuildInfo)
        }
    }
}


dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.material.icons.core
    implementation libs.androidx.material.icons.extended
    implementation libs.androidx.material3
    implementation libs.dialogx
    implementation libs.ktor.client.core
    implementation libs.ktor.client.cio
    implementation libs.mmkv
    implementation libs.kotlinx.serialization.json
    implementation libs.zxing.core
    implementation libs.ffmpeg.tiny
    implementation libs.coil.compose
    implementation libs.coil.network.ktor3
    implementation libs.ktor.client.encoding
    implementation 'eu.agno3.jcifs:jcifs-ng:2.1.9'
    implementation "androidx.media3:media3-exoplayer:1.7.1"
    implementation project(':downloader-core')
    api project(':player')
    implementation libs.material

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}


